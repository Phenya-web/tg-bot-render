import os
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ ID –∫–∞–Ω–∞–ª–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("API_TOKEN")
CHANNEL_ID = os.getenv("CHANNEL_ID")  # –ü—Ä–∏–º–µ—Ä: -1001234567890 (–∏–ª–∏ @username, –µ—Å–ª–∏ –∫–∞–Ω–∞–ª –ø—É–±–ª–∏—á–Ω—ã–π)

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def send_invite(message: types.Message):
    try:
        invite = await bot.create_chat_invite_link(
            chat_id=CHANNEL_ID,
            member_limit=1,
            creates_join_request=False
        )
        await message.reply(f"üîó –í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª:\n{invite.invite_link}")
    except Exception as e:
        await message.reply("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç ‚Äî –∞–¥–º–∏–Ω –≤ –∫–∞–Ω–∞–ª–µ —Å –Ω—É–∂–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏.")
        print("–û—à–∏–±–∫–∞:", e)

@dp.message_handler(commands=['get_id'])
async def get_channel_id(message: types.Message):
    try:
        chat = await bot.get_chat(CHANNEL_ID)
        await message.reply(f"üì¶ ID –∫–∞–Ω–∞–ª–∞: `{chat.id}`", parse_mode="Markdown")
    except Exception as e:
        await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –∫–∞–Ω–∞–ª–∞.")
        print("–û—à–∏–±–∫–∞:", e)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
